---
- name: install required packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ apt_cache_valid_time | default(3600) }}"
  with_items:
    - "nodejs"
    - "nodejs-legacy"
    - "python-pip"
    - "python-dev"
    - "python3-dev"
    - "libpq-dev"
    - "build-essential"
    - "libssl-dev"
    - "libffi-dev"
    - "libsasl2-dev"
    - "libldap2-dev"
    - "git"
    - "supervisor"
    - "npm"

- name: install python virtualenv
  pip:
    name: virtualenv
    state: present

- name: add group lemur
  group:
    name: lemur
    state: present

- name: add user lemur
  user:
    name: lemur
    group: lemur
    state: present
    createhome: yes
    home: /home/lemur


- name: clone lemur git repository
  git:
    repo: "https://github.com/Netflix/lemur"
    dest: /www/lemur
    version: "{{ lemur_version }}"

- name: set permission on /www/lemur
  file:
    path: /www/lemur
    state: directory
    owner: lemur
    group: lemur
    recurse: yes

- name: create virtualenv in /www/lemur
  pip:
    name: Autologging
    state: present
    chdir: /www
    virtualenv_python: python3
    virtualenv: /www/lemur
    virtualenv_site_packages: no
  become: true
  become_method: su
  become_user: lemur

- name: create /www/tmp
  file:
    path: /www/tmp
    state: directory
    owner: root
    group: root
    mode: 1777

- name: create wrapper script
  template:
    src: venv_exec.j2
    dest: /usr/local/bin/venv_exec
    owner: root
    group: root
    mode: 0755

- name: install lemur
  command: /usr/local/bin/venv_exec make release
  args:
    chdir: "{{ lemur_clone_directory }}"
  become: true
  become_method: su
  become_user: lemur
  environment:
    TMPDIR: "{{ lemur_basic_directory }}/tmp"

